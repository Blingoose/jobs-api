openapi: 3.0.0
info:
  title: Jobs Api
  contact: {}
  version: "1.0"
servers:
  - url: https://jobs-api-1es6.onrender.com/api/v1
    variables: {}
paths:
  /jobs:
    get:
      tags:
        - Jobs
      summary: Get All Jobs
      operationId: GetAllJobs
      parameters: []
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    post:
      tags:
        - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/CreateJobRequest"
                - example:
                    company: netflix
                    position: system engineer
            example:
              company: netflix
              position: system engineer
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /jobs/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The job ID
    get:
      tags:
        - Jobs
      summary: Get Job
      operationId: GetJob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: "null"
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: "null"
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/UpdateJobRequest"
                - example:
                    company: Lowkey
                    position: Analytics decoder
            example:
              company: Lowkey
              position: Analytics decoder
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
        - name: id
          in: path
          description: ""
          required: true
          style: simple
          schema:
            type: string
            example: "null"
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register user
      operationId: Registeruser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RegisteruserRequest"
                - example:
                    name: Andre
                    email: andykatov@icloud.com
                    password: "123456789"
            example:
              name: Andre
              email: andykatov@icloud.com
              password: "123456789"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login user
      operationId: Loginuser
      parameters: []
      requestBody:
        description: ""
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/LoginuserRequest"
                - example:
                    email: s.amar@icloud.com
                    password: "123456789"
            example:
              email: s.amar@icloud.com
              password: "123456789"
        required: true
      responses:
        "200":
          description: ""
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Lowkey
        position: Analytics decoder
    CreateJobRequest:
      title: CreateJobRequest
      required:
        - company
        - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: netflix
        position: system engineer
    RegisteruserRequest:
      title: RegisteruserRequest
      required:
        - name
        - email
        - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Andre
        email: andykatov@icloud.com
        password: "123456789"
    LoginuserRequest:
      title: LoginuserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: s.amar@icloud.com
        password: "123456789"
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: jobs
  - name: auth
